# Generated by Django 4.2.24 on 2025-09-17 19:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import eventos.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombre_dependencia', models.CharField(max_length=200, verbose_name='Nombre de la Dependencia')),
                ('titular_dependencia', models.CharField(max_length=100, verbose_name='Titular de la Dependencia')),
                ('nombre_completo', models.CharField(max_length=100, verbose_name='Nombre Completo del Usuario')),
                ('direccion', models.TextField(verbose_name='Dirección')),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1, verbose_name='Género')),
                ('tipo_usuario', models.CharField(choices=[('captura', 'Usuario de Captura'), ('admin', 'Administrador')], default='captura', max_length=10, verbose_name='Tipo de Usuario')),
                ('is_active', models.BooleanField(default=True, verbose_name='Cuenta Activa')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario del Sistema',
                'verbose_name_plural': 'Usuarios del Sistema',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_evento', models.CharField(max_length=200, verbose_name='Nombre del Evento')),
                ('lugar_evento', models.CharField(max_length=200, verbose_name='Lugar del Evento')),
                ('numero_documento', models.CharField(max_length=50, verbose_name='Número del Documento')),
                ('asistira_gobernador', models.BooleanField(choices=[(True, 'Sí'), (False, 'No')], default=False, verbose_name='¿Asistirá el Gobernador?')),
                ('estado', models.CharField(choices=[('programado', 'Programado'), ('activo', 'Activo'), ('finalizado', 'Finalizado'), ('cancelado', 'Cancelado')], default='programado', max_length=20, verbose_name='Estado del Evento')),
                ('fecha_hora_inicio', models.DateTimeField(verbose_name='Fecha y Hora de Inicio')),
                ('fecha_hora_fin', models.DateTimeField(verbose_name='Fecha y Hora de Fin')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('archivo_pdf', models.FileField(blank=True, null=True, upload_to=eventos.models.evento_pdf_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])], verbose_name='Archivo PDF')),
                ('usuario_creador', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='eventos_creados', to=settings.AUTH_USER_MODEL, verbose_name='Usuario Creador')),
            ],
        ),
        migrations.CreateModel(
            name='LogEventoEstado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado_anterior', models.CharField(blank=True, choices=[('programado', 'Programado'), ('activo', 'Activo'), ('finalizado', 'Finalizado'), ('cancelado', 'Cancelado')], max_length=20, null=True)),
                ('estado_nuevo', models.CharField(choices=[('programado', 'Programado'), ('activo', 'Activo'), ('finalizado', 'Finalizado'), ('cancelado', 'Cancelado')], max_length=20)),
                ('fecha_cambio', models.DateTimeField(auto_now_add=True, verbose_name='Fecha del cambio')),
                ('comentario', models.TextField(blank=True, null=True, verbose_name='Comentario adicional')),
                ('automatico', models.BooleanField(default=False, verbose_name='Cambio automático')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs_estado', to='eventos.evento')),
                ('usuario_cambio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuario que realizó el cambio')),
            ],
            options={
                'verbose_name': 'Log de Estado de Evento',
                'verbose_name_plural': 'Logs de Estados de Eventos',
                'ordering': ['-fecha_cambio'],
            },
        ),
    ]
