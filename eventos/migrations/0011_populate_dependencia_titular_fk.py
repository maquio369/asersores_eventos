# Generated by Django 4.2.24 on 2025-09-22 20:27

from django.db import migrations

def populate_dependencia_titular_fk(apps, schema_editor):
    Dependencia = apps.get_model('eventos', 'Dependencia')
    Titular = apps.get_model('eventos', 'Titular')

    for dependencia in Dependencia.objects.all():
        # Try to match by cve_dep (which should correspond to cve_titular)
        try:
            titular = Titular.objects.get(cve_titular=dependencia.cve_dep)
            dependencia.titular_fk = titular
            dependencia.save()
        except Titular.DoesNotExist:
            # If not found by cve_dep, try to match by old_titular string
            if dependencia.old_titular:
                try:
                    # Clean the old_titular string for better matching
                    cleaned_old_titular = dependencia.old_titular.strip().replace('.', '')
                    titular = Titular.objects.get(nom_titular__icontains=cleaned_old_titular)
                    dependencia.titular_fk = titular
                    dependencia.save()
                except Titular.DoesNotExist:
                    print(f"Advertencia: No se encontró Titular para Dependencia (cve_dep={dependencia.cve_dep}, nom_dep='{dependencia.nom_dep}', old_titular='{dependencia.old_titular}')")
                except Titular.MultipleObjectsReturned:
                    print(f"Advertencia: Múltiples Titulares encontrados para Dependencia (cve_dep={dependencia.cve_dep}, nom_dep='{dependencia.nom_dep}', old_titular='{dependencia.old_titular}'). No se asignó titular_fk.")
            else:
                print(f"Advertencia: Dependencia (cve_dep={dependencia.cve_dep}, nom_dep='{dependencia.nom_dep}') no tiene old_titular para buscar.")

class Migration(migrations.Migration):

    dependencies = [
        ('eventos', '0010_populate_titulares'),
    ]

    operations = [
        migrations.RunPython(populate_dependencia_titular_fk, reverse_code=migrations.RunPython.noop),
    ]